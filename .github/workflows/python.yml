name: Python

on:
  push:
    branches:
      - master
    
    tags:
      - v*
  
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Type-check
      run: |
        mypy .

    - name: Test
      run: |
        python -m unittest -v

    - name: Check formatting
      run: |
        black --check --exclude '(_pb2|ib[-_]insync)' .

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    env:
      GCP_PROJECT: tradesponder
      GCP_IMAGE_NAME: blotter

    steps:
    - uses: actions/checkout@v1

    - name: Build Docker image
      run: docker build . -t image

    - name: Log in to GitHub Package Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u "${{ github.actor }}" --password-stdin
  
    - name: Push image to GitHub Package Registry
      run: |
        IMAGE_NAME=$(basename "${{ github.repository }}")
        GPR_IMAGE_ID="docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME"
        VERSION=$(basename "${{ github.ref }}")

        if [ "$VERSION" == "master" ]
        then
          VERSION=latest
        fi

        docker tag image "$GPR_IMAGE_ID:$VERSION"
        docker push "$GPR_IMAGE_ID:$VERSION"
    
    - name: Install Google Cloud SDK
      run: |
        echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
        sudo apt-get install apt-transport-https ca-certificates gnupg

        curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
        sudo apt-get update && sudo apt-get install google-cloud-sdk
    
    - name: Log in to Google Cloud
      run: |
        yes 'n' | gcloud init
        cat <<< '${{ secrets.GCP_TOKEN }}' > gcp_token.json

        gcloud auth activate-service-account "${{ secrets.GCP_USER }}" --key-file gcp_token.json
        yes | gcloud auth configure-docker
    
    - name: Push image to Google Container Registry
      if: github.ref == 'refs/heads/master'
      run: |
        GCP_IMAGE_ID="gcr.io/$GCP_PROJECT/$GCP_IMAGE_NAME"

        docker tag image "$GCP_IMAGE_ID:latest"
        docker push "$GCP_IMAGE_ID:latest"
